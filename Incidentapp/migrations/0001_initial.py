# Generated by Django 5.1.5 on 2025-06-04 09:49

import django.contrib.auth.models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='contributing_factor',
            fields=[
                ('contrib_id', models.AutoField(primary_key=True, serialize=False)),
                ('contrib_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='department',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='designation',
            fields=[
                ('desig_id', models.AutoField(primary_key=True, serialize=False)),
                ('desig_name', models.CharField(max_length=20)),
                ('dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.department')),
            ],
        ),
        migrations.CreateModel(
            name='employee',
            fields=[
                ('emp_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=20)),
                ('contact', models.BigIntegerField(null=True)),
                ('desig_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='Incidentapp.designation')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUpActions',
            fields=[
                ('follow_id', models.AutoField(primary_key=True, serialize=False)),
                ('actions_title', models.CharField(max_length=100)),
                ('date_Completed', models.DateField(auto_now_add=True)),
                ('responsible_emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Incident_ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(max_length=40)),
                ('description', models.CharField(max_length=100, null=True)),
                ('risk_level', models.CharField(max_length=10, null=True)),
                ('potential_severity', models.CharField(max_length=50, null=True)),
                ('likelihood_of_Recurrence', models.CharField(max_length=50, null=True)),
                ('contributing_factor', models.ManyToManyField(db_table='IncidentFactor', to='Incidentapp.contributing_factor')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.department')),
                ('follow_up_actions', models.ManyToManyField(null=True, related_name='follow', through='Incidentapp.FollowUpActions', to='Incidentapp.employee')),
                ('individual_involved', models.ManyToManyField(db_table='IndividualInvolved', related_name='indi', to='Incidentapp.employee')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.employee')),
                ('witnesses', models.ManyToManyField(db_table='Witness', related_name='wit', to='Incidentapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ImmediateAction',
            fields=[
                ('immediate_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('emp_id', models.ManyToManyField(db_table='Immediate_action_employee', related_name='action', to='Incidentapp.employee')),
                ('incident_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='immediateactions', to='Incidentapp.incident_ticket')),
            ],
        ),
        migrations.AddField(
            model_name='followupactions',
            name='id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.incident_ticket'),
        ),
        migrations.CreateModel(
            name='IncidentEvidence',
            fields=[
                ('evidence_id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='file/')),
                ('id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evi', to='Incidentapp.incident_ticket')),
            ],
        ),
        migrations.CreateModel(
            name='POCs',
            fields=[
                ('pocs_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poc', to='Incidentapp.department')),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.employee')),
            ],
        ),
        migrations.AddField(
            model_name='incident_ticket',
            name='assigned_pocs',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.pocs'),
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('recomm_id', models.AutoField(primary_key=True, serialize=False)),
                ('actions', models.CharField(max_length=100)),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.employee')),
                ('id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.incident_ticket')),
            ],
        ),
        migrations.AddField(
            model_name='incident_ticket',
            name='recommendation',
            field=models.ManyToManyField(null=True, related_name='recomm', through='Incidentapp.Recommendations', to='Incidentapp.employee'),
        ),
        migrations.CreateModel(
            name='report_type',
            fields=[
                ('rep_id', models.AutoField(primary_key=True, serialize=False)),
                ('rept_type', models.CharField(max_length=100)),
                ('dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.department')),
            ],
        ),
        migrations.AddField(
            model_name='incident_ticket',
            name='report_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.report_type'),
        ),
        migrations.CreateModel(
            name='Statustaken',
            fields=[
                ('statustaken_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.incident_ticket')),
                ('status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.status')),
            ],
        ),
        migrations.AddField(
            model_name='incident_ticket',
            name='status',
            field=models.ManyToManyField(null=True, related_name='sta', through='Incidentapp.Statustaken', to='Incidentapp.status'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Incidentapp.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='stake_holder',
            fields=[
                ('stake_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
    ]
